<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.talkingdata.plugin.appanalytics_example"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="16"
        android:targetSdkVersion="28" />
    <!--
         Flutter needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- 允许程序联网和发送统计数据的权限。 -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" /> <!-- 允许应用检测网络连接状态，在网络异常状态下避免数据发送，节省流量和电量。 -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" /> <!-- 允许应用以只读的方式访问手机设备的信息，通过获取的信息来唯一标识用户。 -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" /> <!-- 获取设备的MAC地址，同样用来标识唯一用户。 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" /> <!-- 用于保存设备信息，以及记录日志。 -->
    <uses-permission android:name="android.permission.GET_TASKS" /> <!-- (建议配置) 获取当前应用是否在显示应用，可以更精准的统计用户活跃 -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" /> <!-- (可选权限) 可通过GPS获取设备的位置信息，用来修正用户的地域分布数据，使报表数据更准确。 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" /> <!-- (可选权限) 用来获取该应用被使用的粗略位置信息。 -->
    <!--
 io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here.
    -->
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:icon="@mipmap/ic_launcher"
        android:label="appanalytics_example"
        android:usesCleartextTraffic="true" >
        <activity
            android:name="com.talkingdata.plugin.appanalytics_example.MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize" >

            <!--
                 This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme).
            -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />

            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>